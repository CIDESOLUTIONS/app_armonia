import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Users, CheckCircle } from 'lucide-react';
import Button from '@/components/common/Button';
const QuorumVerification = ({ participants, totalUnits, requiredQuorum, onConfirmParticipant, onRegisterProxy }) => {
    const confirmedCount = participants.filter(p => p.confirmado).length;
    const currentPercentage = (confirmedCount / totalUnits) * 100;
    const quorumReached = currentPercentage >= requiredQuorum;
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "bg-white rounded-lg border border-gray-200 p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900", children: "Verificaci\u00F3n de Qu\u00F3rum" }), quorumReached ? (_jsxs("div", { className: "flex items-center text-green-600", children: [_jsx(CheckCircle, { className: "w-5 h-5 mr-2" }), _jsx("span", { children: "Qu\u00F3rum Alcanzado" })] })) : (_jsxs("div", { className: "flex items-center text-yellow-600", children: [_jsx(Users, { className: "w-5 h-5 mr-2" }), _jsx("span", { children: "Esperando Qu\u00F3rum" })] }))] }), _jsxs("div", { className: "relative pt-1", children: [_jsxs("div", { className: "flex mb-2 items-center justify-between", children: [_jsx("div", { children: _jsxs("span", { className: "text-xs font-semibold inline-block text-blue-600", children: [currentPercentage.toFixed(1), "% Confirmado"] }) }), _jsx("div", { className: "text-right", children: _jsxs("span", { className: "text-xs font-semibold inline-block text-blue-600", children: [requiredQuorum, "% Requerido"] }) })] }), _jsx("div", { className: "overflow-hidden h-2 text-xs flex rounded bg-blue-100", children: _jsx("div", { style: { width: `${currentPercentage}%` }, className: `
                shadow-none flex flex-col text-center whitespace-nowrap text-white 
                justify-center transition-all duration-500
                ${quorumReached ? 'bg-green-500' : 'bg-blue-500'}
              ` }) })] }), _jsxs("div", { className: "mt-4 grid grid-cols-2 gap-4 text-sm text-gray-600", children: [_jsxs("div", { children: ["Unidades Confirmadas: ", confirmedCount] }), _jsxs("div", { children: ["Total Unidades: ", totalUnits] })] })] }), _jsxs("div", { className: "bg-white rounded-lg border border-gray-200", children: [_jsx("div", { className: "px-4 py-3 border-b border-gray-200", children: _jsx("h4", { className: "text-sm font-medium text-gray-900", children: "Participantes" }) }), _jsx("div", { className: "divide-y divide-gray-200", children: participants.map((participant) => (_jsxs("div", { className: "px-4 py-3 flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: participant.nombre }), _jsxs("p", { className: "text-sm text-gray-500", children: ["Unidad: ", participant.unidad, participant.poder && ` (Poder: ${participant.poder})`] })] }), _jsx("div", { className: "flex items-center space-x-2", children: participant.confirmado ? (_jsx("span", { className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800", children: "Confirmado" })) : (_jsxs(_Fragment, { children: [_jsx(Button, { size: "sm", variant: "outline", onClick: () => onRegisterProxy(participant.id, ''), children: "Registrar Poder" }), _jsx(Button, { size: "sm", onClick: () => onConfirmParticipant(participant.id), children: "Confirmar" })] })) })] }, participant.id))) })] })] }));
};
export default QuorumVerification;
