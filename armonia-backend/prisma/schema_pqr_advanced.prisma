// Esquema Prisma para el sistema PQR avanzado

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

// Enumeración para categorías de PQR
enum PQRCategory {
  MAINTENANCE
  SECURITY
  ADMINISTRATIVE
  FINANCIAL
  COMMUNITY
  SERVICES
  SUGGESTION
  COMPLAINT
  OTHER
}

// Enumeración para prioridades de PQR
enum PQRPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

// Enumeración para estados de PQR
enum PQRStatus {
  OPEN
  CATEGORIZED
  ASSIGNED
  IN_PROGRESS
  WAITING
  RESOLVED
  CLOSED
  REOPENED
  CANCELLED
}

// Modelo principal para PQR avanzado
model PQR {
  id                Int               @id @default(autoincrement())
  ticketNumber      String
  type              String
  title             String
  description       String
  
  // Categorización y priorización
  category          PQRCategory
  subcategory       String?
  priority          PQRPriority
  impact            String?
  
  // Estado y asignación
  status            PQRStatus         @default(OPEN)
  assignedToId      Int?
  assignedToName    String?
  assignedToRole    String?
  assignedTeamId    Int?
  
  // Fechas y tiempos
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  submittedAt       DateTime          @default(now())
  assignedAt        DateTime?
  startedAt         DateTime?
  resolvedAt        DateTime?
  closedAt          DateTime?
  dueDate           DateTime?
  
  // Usuario y unidad
  userId            Int
  userName          String
  userRole          String
  unitId            Int?
  unitNumber        String?
  complexId         Int
  
  // Resolución
  resolution        String?
  satisfactionRating Int?
  satisfactionComment String?
  
  // Métricas y SLA
  responseTime      Int?
  resolutionTime    Int?
  slaId             Int?
  slaBreached       Boolean?
  
  // Etiquetas y clasificación
  isPrivate         Boolean           @default(false)
  requiresFollowUp  Boolean           @default(false)
  tags              String[]
  
  // Relaciones
  statusHistory     PQRStatusHistory[]
  comments          PQRComment[]
  attachments       PQRAttachment[]
  notifications     PQRNotification[]
  
  // Índices para optimización
  @@index([status])
  @@index([category])
  @@index([priority])
  @@index([assignedToId])
  @@index([userId])
  @@index([complexId])
  @@index([ticketNumber])
  
  @@schema("tenant")
}

// Modelo para historial de estados de PQR
model PQRStatusHistory {
  id                Int               @id @default(autoincrement())
  pqrId             Int
  pqr               PQR               @relation(fields: [pqrId], references: [id])
  previousStatus    PQRStatus?
  newStatus         PQRStatus
  changedAt         DateTime          @default(now())
  changedById       Int
  changedByName     String
  changedByRole     String
  comment           String?
  timeInStatus      Int?
  
  @@index([pqrId])
  @@index([changedAt])
  
  @@schema("tenant")
}

// Modelo para comentarios en PQR
model PQRComment {
  id                Int               @id @default(autoincrement())
  pqrId             Int
  pqr               PQR               @relation(fields: [pqrId], references: [id])
  content           String
  authorId          Int
  authorName        String
  authorRole        String
  isInternal        Boolean           @default(false)
  createdAt         DateTime          @default(now())
  
  @@index([pqrId])
  @@index([createdAt])
  
  @@schema("tenant")
}

// Modelo para archivos adjuntos en PQR
model PQRAttachment {
  id                Int               @id @default(autoincrement())
  pqrId             Int
  pqr               PQR               @relation(fields: [pqrId], references: [id])
  fileName          String
  fileUrl           String
  fileType          String
  fileSize          Int
  uploadedAt        DateTime          @default(now())
  uploadedById      Int
  uploadedByName    String
  
  @@index([pqrId])
  
  @@schema("tenant")
}

// Modelo para notificaciones de PQR
model PQRNotification {
  id                Int               @id @default(autoincrement())
  pqrId             Int
  pqr               PQR               @relation(fields: [pqrId], references: [id])
  type              String
  recipientId       Int
  recipientEmail    String?
  recipientName     String
  subject           String
  content           String
  sentAt            DateTime          @default(now())
  status            String
  
  @@index([pqrId])
  @@index([sentAt])
  
  @@schema("tenant")
}

// Modelo para SLA de PQR
model PQRSLA {
  id                Int               @id @default(autoincrement())
  name              String
  description       String?
  category          PQRCategory?
  priority          PQRPriority?
  responseTime      Int
  resolutionTime    Int
  businessHoursOnly Boolean           @default(true)
  escalationRules   Json?
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  @@schema("tenant")
}

// Modelo para equipos de atención de PQR
model PQRTeam {
  id                Int               @id @default(autoincrement())
  name              String
  description       String?
  memberIds         Int[]
  memberNames       String[]
  categories        PQRCategory[]
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  @@schema("tenant")
}

// Modelo para reglas de asignación automática
model PQRAssignmentRule {
  id                Int               @id @default(autoincrement())
  name              String
  description       String?
  isActive          Boolean           @default(true)
  priority          Int
  
  // Condiciones
  categories        PQRCategory[]
  priorities        PQRPriority[]
  keywords          String[]
  
  // Acción
  assignToTeamId    Int?
  assignToUserId    Int?
  setPriority       PQRPriority?
  setDueDate        String?
  
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  @@schema("tenant")
}

// Modelo para configuración del sistema PQR
model PQRSettings {
  id                      Int       @id @default(autoincrement())
  autoAssignEnabled       Boolean   @default(true)
  autoCategorizeEnabled   Boolean   @default(true)
  autoNotifyEnabled       Boolean   @default(true)
  satisfactionSurveyEnabled Boolean  @default(true)
  allowAnonymousReports   Boolean   @default(false)
  requireApprovalToClose  Boolean   @default(true)
  defaultPriority         PQRPriority @default(MEDIUM)
  updatedAt               DateTime  @updatedAt
  
  @@schema("tenant")
}

// Modelo para categorías personalizadas
model PQRCustomCategory {
  id                Int       @id @default(autoincrement())
  name              String
  parentCategory    PQRCategory
  description       String?
  isActive          Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@schema("tenant")
}

// Modelo para plantillas de respuesta
model PQRResponseTemplate {
  id                Int       @id @default(autoincrement())
  name              String
  category          PQRCategory?
  subject           String
  content           String
  isActive          Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@schema("tenant")
}

// Modelo para reportes y métricas
model PQRReport {
  id                Int       @id @default(autoincrement())
  name              String
  type              String
  parameters        Json
  schedule          String?
  recipients        String[]
  lastRun           DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@schema("tenant")
}
