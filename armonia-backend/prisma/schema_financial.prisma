// Modelos Prisma para el sistema financiero avanzado - Proyecto Armonía

// Enumeraciones para el sistema financiero
enum FeeType {
  MONTHLY           // Cuota mensual de administración
  EXTRAORDINARY     // Cuota extraordinaria
  SPECIAL_ASSESSMENT // Derrama especial
  LATE_FEE         // Interés moratorio
  SERVICE          // Cuota por servicios
  MAINTENANCE      // Cuota de mantenimiento
  INSURANCE        // Seguro
  OTHER            // Otros conceptos
  
  @@schema("tenant")
}

enum PaymentStatus {
  PENDING    // Pendiente de pago
  PARTIAL    // Pago parcial
  PAID       // Pagado completamente
  OVERDUE    // Vencido
  CANCELLED  // Cancelado
  
  @@schema("tenant")
}

enum PaymentMethod {
  CASH           // Efectivo
  BANK_TRANSFER  // Transferencia bancaria
  CREDIT_CARD    // Tarjeta de crédito
  DEBIT_CARD     // Tarjeta débito
  CHECK          // Cheque
  PSE            // PSE Colombia
  DIGITAL_WALLET // Billetera digital
  OTHER          // Otro método
  
  @@schema("tenant")
}

enum ReceiptType {
  STANDARD
  DETAILED
  SIMPLIFIED
  
  @@schema("tenant")
}

enum ReceiptStatus {
  GENERATED
  SENT
  VIEWED
  CANCELLED
  
  @@schema("tenant")
}

enum BudgetStatus {
  DRAFT
  APPROVED
  EXECUTED
  CANCELLED
  
  @@schema("tenant")
}

enum ReportType {
  INCOME_EXPENSE
  BALANCE
  BUDGET_COMPARISON
  CASH_FLOW
  DEBTORS
  PAYMENTS
  
  @@schema("tenant")
}

enum ReportFormat {
  PDF
  EXCEL
  CSV
  
  @@schema("tenant")
}

// Modelo para facturas generadas
model Bill {
  id             Int           @id @default(autoincrement())
  billNumber     String        @unique // Número de factura secuencial
  billingPeriod  String        // YYYY-MM formato
  totalAmount    Decimal       @db.Decimal(10, 2)
  dueDate        DateTime
  status         PaymentStatus @default(PENDING)
  generatedAt    DateTime      @default(now())
  paidAt         DateTime?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  
  // Relaciones
  propertyId     Int
  property       Property      @relation(fields: [propertyId], references: [id])
  billItems      BillItem[]    // Items de la factura
  payments       Payment[]     // Pagos aplicados a esta factura

  @@index([propertyId])
  @@index([status])
  @@index([billingPeriod])
  @@index([dueDate])
  @@schema("tenant")
}

// Modelo para items de factura (detalle de conceptos)
model BillItem {
  id        Int     @id @default(autoincrement())
  name      String  // Nombre del concepto
  amount    Decimal @db.Decimal(10, 2)
  type      String  // Tipo de cuota
  
  // Relaciones
  billId    Int
  bill      Bill    @relation(fields: [billId], references: [id])
  feeId     Int?    // Referencia opcional a la estructura de cuota
  fee       Fee?    @relation(fields: [feeId], references: [id])

  @@index([billId])
  @@schema("tenant")
}

// Modelo para gastos/egresos
model Expense {
  id            Int           @id @default(autoincrement())
  description   String
  amount        Decimal       @db.Decimal(10, 2)
  category      String        // Categoría del gasto
  expenseDate   DateTime
  vendor        String?       // Proveedor o beneficiario
  invoiceNumber String?       // Número de factura del proveedor
  notes         String?
  status        String        @default("PENDING") // PENDING, APPROVED, PAID
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  // Relaciones
  complexId     Int
  complex       ResidentialComplex @relation(fields: [complexId], references: [id])
  budgetId      Int?          // Presupuesto al que pertenece (opcional)
  budget        Budget?       @relation(fields: [budgetId], references: [id])
  approvedById  Int?          // Usuario que aprobó el gasto
  approvedBy    User?         @relation("ExpensesApproved", fields: [approvedById], references: [id])
  
  @@index([complexId])
  @@index([category])
  @@index([expenseDate])
  @@index([status])
  @@schema("tenant")
}

// Modelo para recibos/comprobantes
model Receipt {
  id            Int      @id @default(autoincrement())
  receiptNumber String   @unique
  description   String
  amount        Decimal  @db.Decimal(10, 2)
  issuedDate    DateTime @default(now())
  format        String   @default("PDF") // PDF, EMAIL, PRINT
  content       Json?    // Contenido estructurado del recibo
  createdAt     DateTime @default(now())
  
  // Relaciones
  propertyId    Int
  property      Property @relation(fields: [propertyId], references: [id])
  paymentId     Int?     // Pago asociado (opcional)
  payment       Payment? @relation(fields: [paymentId], references: [id])

  @@index([propertyId])
  @@index([issuedDate])
  @@schema("tenant")
}

// Modelo para reportes financieros (financial reports)
model FinancialReport {
  id              Int           @id @default(autoincrement())
  title           String
  type            ReportType
  startDate       DateTime
  endDate         DateTime
  format          ReportFormat  @default(PDF)
  fileUrl         String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Relaciones
  createdBy       User          @relation(fields: [createdById], references: [id])
  createdById     Int

  @@index([type])
  @@index([startDate, endDate])
  @@index([createdById])
  @@schema("tenant")
}