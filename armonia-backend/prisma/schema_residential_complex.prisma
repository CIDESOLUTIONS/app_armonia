model ResidentialComplex {
  id          Int      @id @default(autoincrement())
  name        String
  address     String
  city        String
  country     String
  schemaName  String   @unique // Nombre del esquema para el tenant
  adminId     Int      // ID del administrador principal del complejo
  admin       User     @relation("ManagedComplexes", fields: [adminId], references: [id])
  contactEmail String
  contactPhone String
  logoUrl     String?
  planId      Int
  plan        Plan     @relation(fields: [planId], references: [id])
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users       User[]
  properties  Property[]
  fees        Fee[]
  payments    Payment[]
  budgets     Budget[]
  surveys     Survey[]
  serviceProviders ServiceProvider[]
  documents   Document[]
  visitors    Visitor[]
  packages    Package[]
  listings    Listing[]
  messages    Message[]
  reports     Report[]
  reportedListings ReportedListing[]
  loginHistory LoginHistory[]
  passwordResetTokens PasswordResetToken[]
  preRegisteredVisitors PreRegisteredVisitor[]
  microCreditApplications MicroCreditApplication[]
  reviews     Review[]
  userVotes   UserVote[]
  paymentAttempts PaymentAttempt[]
  attendances Attendance[]
  assemblies  Assembly[]
  votes       Vote[]
  questions   Question[]
  options     Option[]
  smartMeterReadings SmartMeterReading[]

  @@map("ResidentialComplex")
  @@index([adminId])
  @@index([planId])
}