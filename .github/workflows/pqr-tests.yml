name: PQR System Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/services/pqr**'
      - 'src/app/api/pqr/**'
      - 'prisma/schema_pqr_advanced.prisma'
      - 'e2e/pqr.spec.ts'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/services/pqr**'
      - 'src/app/api/pqr/**'
      - 'prisma/schema_pqr_advanced.prisma'
      - 'e2e/pqr.spec.ts'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Meciza1964
          POSTGRES_DB: armonia_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup test database
        run: |
          npx prisma migrate deploy
          npx prisma db seed
        env:
          DATABASE_URL: postgresql://postgres:Meciza1964@localhost:5432/armonia_test?schema=armonia
      
      - name: Run unit tests
        run: npm test -- --testPathPattern=src/services/__tests__/pqr.*\.test\.ts
        env:
          DATABASE_URL: postgresql://postgres:Meciza1964@localhost:5432/armonia_test?schema=armonia
  
  e2e-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Meciza1964
          POSTGRES_DB: armonia_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Setup test database
        run: |
          npx prisma migrate deploy
          npx prisma db seed
        env:
          DATABASE_URL: postgresql://postgres:Meciza1964@localhost:5432/armonia_test?schema=armonia
      
      - name: Build application
        run: npm run build
      
      - name: Start application
        run: npm run start &
        env:
          DATABASE_URL: postgresql://postgres:Meciza1964@localhost:5432/armonia_test?schema=armonia
          NEXT_PUBLIC_APP_URL: http://localhost:3000
      
      - name: Wait for application to start
        run: npx wait-on http://localhost:3000 -t 60000
      
      - name: Run E2E tests
        run: npx playwright test e2e/pqr.spec.ts
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
